{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4MAceA,EAZK,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC/B,OACI,sBAAKC,UAAW,sDAAhB,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACA,6BAAKF,IACL,4BAAIC,WCeDK,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACtB,OACI,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHXS,SCIHC,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACA,uBACAA,UAAY,mCACZW,KAAK,SACLC,YAAY,oBACZC,SAAUH,OCEHI,G,MARA,SAACC,GACZ,OACE,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACIJ,EAAMK,aCgBDC,E,kDAnBX,WAAaN,GAAQ,IAAD,8BAChB,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHE,E,qDAOpB,SAAmBC,EAAOC,GACtBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,0DAEJG,KAAKX,MAAMK,a,GAhBCQ,aC8CZC,E,kDAvCX,aAAe,IAAD,8BACZ,gBAYFC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAZ3C,EAAKX,MAAQ,CACblB,OAAQ,GACRK,YAAa,IAJD,E,qDAQd,WAAqB,IAAD,OAChByB,MAAM,+CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKX,SAAS,CAACvB,OAAQkC,S,oBAMzC,WAAU,IAAD,OACGlC,EAAWsB,KAAKJ,MAAhBlB,OACFmC,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAAS,EAAKrB,MAAMb,YAAYiC,kBAEpE,OAAQtC,EAAOwC,OAGP,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQmC,WAPlC,6C,GAxBUX,aCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAQ,cAAC,EAAD,IAAQC,SAASC,eAAe,SAKjDX,K","file":"static/js/main.173c7844.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Card = ({name, email, id}) => {\r\n    return (\r\n        <div className= 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\n\r\nconst CardList = ({ robots }) => {\r\n\r\n    return (\r\n        <div>\r\n            {   \r\n            robots.map((user, i) => {\r\n        return (\r\n            <Card \r\n            key ={i} \r\n            id={robots[i].id} \r\n            name={robots[i].name} \r\n            email={robots[i].email}\r\n        />\r\n        );  \r\n      }) \r\n    }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n        <input\r\n        className = 'pa3 ba b--green bg-lightest-blue'\r\n        type='search' \r\n        placeholder='search for robots'\r\n        onChange={searchChange}\r\n        />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n      <div style={{ overflowY: 'scroll', border: '3px solid black', height: '800px'}}>\r\n         {props.children} \r\n      </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;","import React, { Component }  from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch (error, info) {\r\n        this.setState({hasError:true})\r\n    }\r\n\r\n    render () {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooops. That is not good.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport '../containers/App.css';\r\nimport '../index.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n      super()  \r\n      this.state = {\r\n      robots: [], \r\n      searchfield: ''\r\n    }\r\n}\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users/')\r\n        .then(response=> response.json())\r\n        .then(users=> this.setState({robots: users}));\r\n    }\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n    }\r\n\r\n    render() {\r\n        const { robots } = this.state;\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());   \r\n        })\r\n        return !robots.length ? \r\n        <h1>Loading</h1> :\r\n        (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                      <ErrorBoundry>\r\n                        <CardList robots={filteredRobots}/>\r\n                      </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            \r\n        ); \r\n    }\r\n}   \r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render( <App/>, document.getElementById('root') );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}